axis.title=element_text(size=12))
my_plot
#library(wesanderson)
pal <- wes_palette("FantasticFox1", n =4, type= 'discrete')
my_plot <- ggplot(df_4, aes(Category), color = Category) +
geom_bar(stat='count') +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
pal <- wes_palette("FantasticFox1", n =4, type= 'discrete')
my_plot <- ggplot(df_4, aes(Category, color = pal)) +
geom_bar(stat='count') +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
pal <- wes_palette("FantasticFox1", n =4, type= 'discrete')
my_plot <- ggplot(df_4, aes(Category, color = Category)) +
geom_bar(stat='count') +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
pal <- wes_palette("FantasticFox1", n =4, type= 'discrete')
my_plot <- ggplot(df_4, aes(Category, color = Category)) +
geom_bar(stat='count') +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12)) +
scale_fill_manual(values = wes_palette("GrandBudapest1", n = 4))
my_plot
#library(wesanderson)
pal <- wes_palette("FantasticFox1", n =4, type = 'continious')
#library(wesanderson)
pal <- wes_palette("FantasticFox1", n =4, type = 'continuous')
my_plot <- ggplot(df_4, aes(Category, color = Category)) +
geom_bar(stat='count') +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12)) +
scale_fill_gradientn(colours = pal)
my_plot
head(brain_data)
library(tidyverse)
library(broom)
library(rsample)
head(brain_data[1,])
head(brain_data[,1])
response <- brain_data[,1]
X <- brain_data[,2]
X$inter <- 1
X
beta <- solve(t(X) %*% X) %*% t(X) %*% response
X <- matrix(X)
X <- matrix(X)
response <- matrix(response)
beta <- solve(t(X) %*% X) %*% t(X) %*% response
X <- matrix(X)
response <- matrix(response)
trons <- t(X)
X <- matrix(X)
response <- matrix(response)
transposed_X <- t(X)
beta <- solve(transposed_X %*% X) %*% transposed_X %*% response
beta <- solve(transposed_X * X) %*% transposed_X %*% response
transposed_X * X
transposed_X %*% X
#Creating response and X matrix
response <- brain_data[,1]
X <- brain_data[,2]
#Creating intercept in x matrix
X$inter <- 1
dim(X) <- c(2, 59)
size(X)
len(X)
Length(X)
length(X)
x
X
dim(X) <- c(2, 5)
dim(X) <- c(2, 58)
dim(X) <- c(2, 60)
X <- matrix(X)
response <- matrix(response)
transposed_X <- t(X)
class(X)
X
#Creating response and X matrix
response <- brain_data[,1]
X <- brain_data[,2]
X <- cbind(X, rep.int(1, 59))
X
class(X)
#Creating response and X matrix
response <- brain_data[,1]
X <- brain_data[[,2]]
#Creating response and X matrix
response <- brain_data[,1]
X <- brain_data[[59,2]]
X <- cbind(X, rep.int(1, 59))
class(X)
transposed_X <- t(X)
beta <- solve(transposed_X * X) %*% transposed_X %*% response
transposed_X
X
#Creating response and X matrix
response <- brain_data[,1]
X <- brain_data[[59,2]]
inter <- rep.int(1, 59)
X <- cbind(X, inter)
X
#Creating response and X matrix
response <- brain_data[,1]
X <- brain_data[[59,2]]
X$inter <- 1
#X <- cbind(X, inter)
x
X
#Creating response and X matrix
response <- brain_data[,1]
X <- brain_data[[59,2]]
X$inter <- rep.int(1,59)
#X <- cbind(X, inter)
X
lm_iris <- lm (Sepal.Width ~ Sepal.Length * Species, data = iris)
confint_tidy(lm_iris)[1,]
new_iris <- filter(iris, iris$Sepal.Length == 5.0 & iris$Species == 'setosa')
new_iris_df <- as.data.frame(new_iris)
predict(lm_iris, new_iris_df, interval = 'confidence')
new_iris <- filter(iris, iris$Sepal.Length == 5.0 & iris$Species == 'setosa')
#new_iris_df <- as.data.frame(new_iris)
predict(lm_iris, new_iris, interval = 'confidence')
library(tidyverse)
library(broom)
library(rsample)
#Creating response and X matrix
response <- brain_data[,1]
X <- brain_data[[59,2]]
X$inter <- rep.int(1,59)
X <- cbind(X, inter)
X
transposed_X <- t(X)
beta <- solve(transposed_X * X) %*% transposed_X %*% response
beta <- solve(transposed_X %*% X) %*% transposed_X %*% response
#Creating response and X matrix
X <- matrix(1, nrow = nrow(brain_data), ncols = 2)
#Creating response and X matrix
X <- matrix(1, nrow = nrow(brain_data), ncol = 2)
X[,2] <- brain_data$body_wgt
y <- matrix(1, nrow = nrow(brain_data), ncol = 1)
y[,1] <- brain_data$brain_wgt
beta <- solve(t(X) %*% X) %*% t(X) %*% response
beta <- solve(t(X) %*% X) %*% t(X) %*% y
beta <- solve(t(X) %*% X) %*% t(X) %*% y
beta
new_iris <- filter(iris, iris$Sepal.Length == 5.0 & iris$Species == 'setosa')
#new_iris_df <- as.data.frame(new_iris)
predict(lm_iris, new_iris, interval = 'confidence')[1,]
lm_iris <- lm (Sepal.Width ~ Sepal.Length * Species, data = iris)
confint_tidy(lm_iris)[2,]
predict(lm_iris, new_iris, interval = 'prediction')[1,]
lm_5 <- lm(univ_gpa ~ high_gpa + math_sat + verb_sat, gpa_data)
View(lm_5)
lm_5
lm_5[,1]
lm_5[1,]
View(lm_5)
View(lm_5)
lm_5$coefficients
p <- lm_5$coefficients
p
p <- lm_5$coefficients
p[,1]
p <- lm_5$coefficients
View(lm_5)
View(lm_5)
View(lm_5)
cor_mat <- cor(gpa_data)
cor_mat <- cor(gpa_data)
cor_mat <- round(cor(gpa_data),2)
gpa_data <- read_csv("gpa_data.csv")
brain_data <- read_csv("brain_data.csv")
marathon <- read_csv("marathon.csv", col_types = cols(
id = col_factor(),
female = col_factor(),
footwear = col_factor(),
group = col_factor(),
injury = col_factor()
)) %>%
filter(completed_marathon == 1) %>%
mutate(speed = distance / time,
id = factor(id),) %>%
select(-c(completed_marathon,
distance,
time))
cor_mat <- round(cor(gpa_data),2)
cor_mat
View(gpa_data)
gpa_data[1:3,]
gpa_data[,1:3]
cor_mat <- round(cor(gpa_datagpa_data[,1:3]),2)
cor_mat <- round(cor(gpa_data[,1:3]),2)
cor_mat
#cor_mat <- melt(cor_mat)
#cor_mat
cor_mat <- round(cor(gpa_data[,1:3]),2)
cor_mat
cor_mat <- melt(cor_mat)
install.packages('reshape2 v1.4.3')
install.packages('reshape2')
cor_mat <- round(cor(gpa_data[,1:3]),2)
cor_mat <- melt(cor_mat)
cor_mat <- round(cor(gpa_data[,1:3]),2)
cor_mat <- melt(cor_mat)
cor_mat <- round(cor(gpa_data[,1:3]),2)
cor_mat <- melt(cor_mat)
cor_mat <- round(cor(gpa_data[,1:3]),2)
cor_mat <- melt(cor_mat)
cor_mat <- round(cor(gpa_data[,1:3]),2)
cor_mat <- melt(cor_mat)
install.packages("reshape2")
cor_mat <- round(cor(gpa_data[,1:3]),2)
cor_mat <- melt(cor_mat)
cor_mat <- round(cor(gpa_data[,1:3]),2)
cor_mat <- melt(cor_mat)
library(tidyverse)
library(broom)
library(rsample)
library(reshape2)
cor_mat <- round(cor(gpa_data[,1:3]),2)
cor_mat <- melt(cor_mat)
cor_mat
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value))
library(tidyverse)
library(broom)
library(rsample)
library(reshape2)
library(wesanderson)
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_manual(values = wes_palette('GrandBudapest1', n =4))
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colours = pal)
pal <- wes_palette("GrandBudapest1", 100, type = "continuous")
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colours = pal)
pal <- wes_palette("Rushmore1", 100, type = "continuous")
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colours = pal)
pal <- wes_palette("Royal2", 100, type = "continuous")
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colours = pal)
pal <- wes_palette("GrandBudapest1", 100, type = "continuous")
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colours = pal)
pal <- wes_palette("GrandBudapest1", 100, type = "continuous")
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colours = pal) +
ggtitle('Correlation between response variables')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(anytime)
library(lubridate)
library(wesanderson)
df <- read.csv("data/Police_Department_Incidents_-_Previous_Year__2016_.csv")
drop_na(df)
#Changing the formats
df <- separate(df, 'Date', 'Date', sep = " ")
df$Date <- mdy(df$Date)
df$Hour <- hm(df$Time) %>% hour()
#df <- separate(df, Time, c('Hour', 'Min', 'Sec'), sep = ' ')
#head(df)
#Filtering 4 top crimes
df_4 <- filter(df, Category %in% c('ASSAULT', 'VANDALISM', 'VEHICLE THEFT', 'LARCENY/THEFT'))
df_4
#library(wesanderson)
#ldpal <- wes_palette("FantasticFox1", n =4, type = 'continuous')
my_plot <- ggplot(df_4, aes(Category, color = Category)) +
geom_bar(stat='count') +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'descrete')
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', fill = 'Category ') +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', fill = 'Category') +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', fill = Category) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
scale_fill_gradientn(colours = ldpal) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
scale_fill_manual(colours = ldpal) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
scale_fill_manual(colour = ldpal) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
scale_fill_manual(values = wes_palette("GrandBudapest1", n = 4)) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
scale_fill_manual(values = wes_palette("FantasticFox1", n = 4)) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
scale_fill_manual(values = wes_palette("FantasticFox2", n = 4)) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 4)) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
scale_fill_manual(values = wes_palette("Cavalcanti1", n = 4)) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
scale_fill_manual(values = wes_palette("Moonrise2", n = 4)) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
pal <- wes_palette("GrandBudapest2", 100, type = "continuous")
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colours = pal) +
ggtitle('Correlation between response variables')
pal <- wes_palette("Moonrise2", 100, type = "continuous")
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colours = pal) +
ggtitle('Correlation between response variables')
pal <- wes_palette("Chevalier1", 100, type = "continuous")
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colours = pal) +
ggtitle('Correlation between response variables')
pal <- wes_palette("Rushmore1", 100, type = "continuous")
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colours = pal) +
ggtitle('Correlation between response variables')
pal <- wes_palette("GrandBudapest1", 100, type = "continuous")
ggplot(cor_mat, aes(x = Var1, y = Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colours = pal) +
ggtitle('Correlation between response variables')
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
scale_fill_manual(values = wes_palette("Moonrise2", n = 10)) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
#library(wesanderson)
ldpal <- wes_palette("FantasticFox1", n =4, type = 'discrete')
my_plot <- ggplot(df_4, aes(Category)) +
geom_bar(stat='count', aes(fill = Category)) +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
scale_fill_manual(values = wes_palette("Moonrise2", n = 4)) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
install.packages('car')
vif(lm_5)
library(tidyverse)
library(broom)
library(rsample)
library(reshape2)
library(wesanderson)
library(car)
vif(lm_5)
install.packages("reticulate")
reticulate::repl_python()
n
install.packages("rlang")
library(tidyverse)
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
remove.packages('tidyverse')
install.packages('tidyverse')
$ pip install selenium
setwd("C:/Users/Polina/Desktop/Homework/Block_4/DSCI_522/DSCI_522_Group_303/src")
install.packages('docopt')
